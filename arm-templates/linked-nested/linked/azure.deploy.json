{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },  
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "provide a name for your storage account"
            }
        },
        // number of str accounts. This could be an array if you would want to specify three different names or similar.
        "numberOfStorageAccounts": {
            "type": "int",
            "metadata": {
                "description": "number of storage accounts you want provisioned"
            },
            "defaultValue": 5
        },
        "environment": {
           "type": "string",
           "metadata": {
                "description": "provide environment for the deployment"
            },
            "allowedValues": [
                "dev",
                "prod"
            ],
            "defaultValue": "dev" // let user provide an environment parameter
        },
        "allowAzureServices": {
           "type": "string",
           "metadata": {
                "description": "provide environment for the deployment"
            },
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes" // let user provide an environment parameter
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "name": "[parameters('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[deployment().location]",
            "dependsOn": [
            ],
            "tags": {
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "linked-storageDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]" // dependent on the resource group created in the main/orchestrating template
            ],
            "resourceGroup": "[parameters('resourceGroupName')]",
            "apiVersion": "2020-06-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    // needs to be publiclly available or use storage account with SAS token
                    // template spec (preview) will 'simplyfy' this
                    "uri": "https://raw.githubusercontent.com/ehrnst/arm-templates/master/advanced-templating/4.0-copy/azure.deploy.json"
                },
                // this is where we pass parameters to the linked template. In this case, we have the values in our main template parameter file, and pass them downstream
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "numberOfStorageAccounts": {
                        "value": "[parameters('numberOfStorageAccounts')]"
                    },
                    "environment": {
                        "value": "[parameters('environment')]"
                    },
                    "allowAzureServices": {
                        "value": "[parameters('allowAzureServices')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        // output from our nested template. References the deployment output above
        "storageAccounts": {
            "type": "array",
            "value": "[reference('linked-storageDeployment').outputs.storageAccounts.value]"
        },
        // output from parent template
        "resourceGroup": {
            "type": "string",
            "value": "[resourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
        }
    }
}